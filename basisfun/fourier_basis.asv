function [B,scale,Tcirc] = fourier_basis(X, HP, params)
% builds FFT transformation matrix concatenating for multiple processes
%  [B,scale] = basis_fft_cat(xx, len, n, condthresh, minl,addreg)

if nargin<3 % threshold on condition number of covariance matrix
    condthresh = params.condthresh;
else
    condthresh = 1e12;
end


HP = HP(1); % length hyperparameter
assert(HP>=0,'length scale must be positive');
    minl = HP; % temporal scale


range = max(X) - min(X);  % range of values for given component
Tcirc = range + 3*minl; %   range + 3*minscale (for virtual padding to get periodic covariance)

% set up Fourier frequencies
maxw = floor((Tcirc/(pi*minl))*sqrt(.5*log(condthresh)));  % max freq to use
nw = maxw*2+1; % number of fourier frequencies
nw = min(nw, length(X)); % no more fourier frequencies than sample points

X = X - min(X); % start at 0

% compute transformation matrix and vector of spectral coordinates
% for just one process
[B,scale] = realnufftbasis(X,Tcirc,nw); % make Fourier basis

%B = repmat({BF},1,n); % duplicate matrix n times
%B = blkdiag(addreg, B{:});